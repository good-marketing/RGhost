language = "en_US",
meta_title  = "",
meta_description  = "",
author   = "",
tags     = list())
)
library(RGhost)
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
Post <- get_post_ghost(36)
Post <- get_post_ghost(36)
Post <- get_post_ghost(36)
Post <- get_post_ghost(36)
Post <- get_post_ghost(36)
Post$tags
Post$tag
library(RGhost)
Post <- get_post_ghost(36)
library(RGhost)
Post <- get_post_ghost(36)
access_token <- authenticate_ghost()
GetGhostPost <- GET("http://good-marketing.org/ghost/api/v0.1/users/me",
# encode="json",
verbose(),
add_headers(
"Content-Type" = "application/json",
"Authorization" = paste('Bearer', access_token) ,
"User-Agent"="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36")
)
content(GetGhostPost)
GetGhostPost <- GET("http://good-marketing.org/ghost/api/v0.1/users",
# encode="json",
verbose(),
add_headers(
"Content-Type" = "application/json",
"Authorization" = paste('Bearer', access_token) ,
"User-Agent"="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36")
)
content(GetGhostPost)
GetGhostPost <- GET("http://good-marketing.org/ghost/api/v0.1/users",
# encode="json",
verbose(),
add_headers(
"Content-Type" = "application/json",
"Authorization" = paste('Bearer', access_token) ,
"User-Agent"="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36")
)
content(GetGhostPost)
test <- fromJSON(content(GetGhostPost,as="text"),flatten=TRUE)
test <- fromJSON(content(GetGhostPost[1],as="text"),flatten=TRUE)
test <- fromJSON(content(GetGhostPost,as="text")[1],flatten=TRUE)
test <- fromJSON(content(GetGhostPost,as="text"),flatten=TRUE)$users
GetGhostPost <- GET("http://good-marketing.org/ghost/api/v0.1/tags",
# encode="json",
verbose(),
add_headers(
"Content-Type" = "application/json",
"Authorization" = paste('Bearer', access_token) ,
"User-Agent"="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36")
)
test <- fromJSON(content(GetGhostPost,as="text"),flatten=TRUE)
test <- fromJSON(content(GetGhostPost,as="text"),flatten=TRUE)$tags
test <- fromJSON(content(GetGhostPost,as="text"),flatten=TRUE)[[1]]
library(RGhost)
access_token <- authenticate_ghost()
GetGhostPost <- GET("http://good-marketing.org/ghost/api/v0.1/tags",
# encode="json",
verbose(),
add_headers(
"Content-Type" = "application/json",
"Authorization" = paste('Bearer', access_token) ,
"User-Agent"="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36")
)
test <- parse_content(GetGhostPost)
access_token <- authenticate_ghost()
GetGhostPost <- GET("http://good-marketing.org/ghost/api/v0.1/tags",
# encode="json",
verbose(),
add_headers(
"Content-Type" = "application/json",
"Authorization" = paste('Bearer', access_token) ,
"User-Agent"="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36")
)
test <- parse_content(GetGhostPost)
GetGhostPost <- GET("http://good-marketing.org/ghost/api/v0.1/users",
# encode="json",
verbose(),
add_headers(
"Content-Type" = "application/json",
"Authorization" = paste('Bearer', access_token) ,
"User-Agent"="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36")
)
testuser <- parse_content(GetGhostPost)
get_tags <- function {
access_token <- authenticate_ghost()
GetGhostPost <- GET("http://good-marketing.org/ghost/api/v0.1/tags",
# encode="json",
verbose(),
add_headers(
"Content-Type" = "application/json",
"Authorization" = paste('Bearer', access_token) ,
"User-Agent"="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36")
)
return(parse_content(GetGhostPost))
}
library(RGhost)
testtags <- get_tags()
library(RGhost)
get_users()
library(RGhost)
get_current_user()
get_current_user()$name
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
editR::editR('template.Rmd')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(RGhost)
shiny::runApp()
shiny::runApp()
shiny::runApp()
get_tag_list$hier
get_tag_list
shiny::runApp()
editR::('template.Rmd')
editR::('template.Rmd')
library("editR", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
editR::('template.Rmd')
editR::('template.Rmd')
editR::editR('template.Rmd')
shiny::runApp()
shiny::runApp()
get_tag_list()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(RGhost)
shiny::runApp()
test<- get_tags()
test$tags[1]
test$tags[[1]]
test$hier$tags[[1]]
test$hier$tags[1]
test$hier$tags[1][1]
test$hier$tags[1][[1]]
test$hier$tags[1][[2]]
test$hier$tags
test$hier$tags$id
test$hier$tags$id[1]
library(RGhost)
test<- get_tags()
test$hier$tags[1]
install.packages("rlist")
library("rlist", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
list.filter(test$hier$tags, id ==5)
list.filter(test$hier$tags, id == c(5,6))
list.filter(test$hier$tags, id %in% c(5,6))
listtest <-  list.filter(test$hier$tags, id %in% c(5,6))
listtest
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
get_users()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
get_post_ghost)36
get_post_ghost(36)
shiny::runApp()
get_post_ghost(39)
shiny::runApp()
shiny::runApp()
shiny::runApp()
length(get_tag_list)
length(Tags)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
testing <- list(5,6,'Help')
lapply(testing, function(x)
print(x))
lapply(testing, function(x)
print(x))
TagList <- list()
lapply(testing, function(x)
TagList <- list()
Tags <- list.filter(get_tag_list$hier$tags, id == x )
if(length(Tags >0 ){list.append(TagList, Tags)}else{}
)
)
suptest <- list(id=5,id=6)
testing <- list(5,6,'Help')
testing <- list(5,6,'Help')
suptest <- list(id=5,id=6)
lapply(testing, function(x)
TagList <- list()
Tags   <- list.filter(suptest, id == x)
if(length(Tags) >0 ){
list.append(TagList, Tags)}else{}
)
lapply(testing, function(x)
TagList <- list()
Tags   <- list.filter(suptest, id == x)
if(length(Tags) > 0 )
{
list.append(TagList, Tags)
}
)
Tags <- list(5,6)
TagsList <- list.filter(get_tag_list$hier$tags, id !%in% Tags )
TagsList <- list.filter(get_tag_list$hier$tags, id %in% Tags )
TagsList <- list.filter(get_tag_list$hier$tags, id %in% Tags )
Tags <- c(8,6)
TagsList <- list.filter(get_tag_list$hier$tags, id %in% Tags )
TagsList <- list.filter(get_tag_list$hier$tags, id !%in% Tags )
TagsList <- list.filter(get_tag_list$hier$tags, id not %in% Tags )
list.findi(get_tag_list$hier$tags, id  %in% Tags)
Tags <- c(8,9,"Help")
list.findi(get_tag_list$hier$tags, id  %in% Tags)
x <- list(p1 = list(type="A",score=list(c1=10,c2=8)),
p2 = list(type="B",score=list(c1=9,c2=9)),
p3 = list(type="B",score=list(c1=9,c2=7)))
list.findi(x,type=="B")
list.findi(x,min(score$c1,score$c2) >= 8)
list.findi(x,min(score$c1,score$c2) <= 8,2)
list.findi(get_tag_list$hier$tags, id  == Tags)
TagsList <- list.filter(get_tag_list$hier$tags, id  == 8,9 )
TagsList <- list.filter(get_tag_list$hier$tags, id  %in% Tags )
list.findi(get_tag_list$hier$tags, id %in% Tags)
x <- list(p1 = list(type="A",score=list(c1=10,c2=8)),
p2 = list(type="B",score=list(c1=9,c2=9)),
p3 = list(type="B",score=list(c1=9,c2=7)))
list.iter(x,cat(paste(type,"\n")))
list.iter(x,cat(str(.)))
install.packages("pipeR")
library("pipeR", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
list.iter(Tags,
testtags <- list.filter(get_tag_list$hier$tags, id == Tags ))
list.iter(Tags,
testtags ~ list.filter(get_tag_list$hier$tags, id == Tags ))
list.iter(Tags,
aaah ~ list.filter(get_tag_list$hier$tags, id == Tags ))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(RGhost)
library(RGhost)
shiny::runApp()
shiny::runApp()
library(RGhost)
shiny::runApp()
shiny::runApp()
devtools::use_vignette("RGhost")
library(RGhost)
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
url
api_ghost_url <- paste0(url_base,version)
url_base <- "http://good-marketing.org"
version  <- "/ghost/api/v0.1/"
api_ghost_url <- paste0(url_base,version)
api_ghost_url
install_github('ramnathv/rCharts@dev')
install_github('ramnathv/rMaps')
devtools::install_github('ramnathv/rCharts@dev')
install_github('ramnathv/rMaps')
devtools::install_github('ramnathv/rMaps')
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
ichoropleth(Crime ~ State, data = subset(violent_crime, Year == 2010))
ichoropleth(Crime ~ State, data = violent_crime, animate = "Year")
ichoropleth(Crime ~ State, data = violent_crime, animate = "Year", play = TRUE)
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
install.packages("ggvis")
install.packages("dplyr")
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
install.packages("quantmod")
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
library(RGhost)
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
get_tags()
get_tags()$flat$id
get_tags()$flat$name
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
unlist(Post$tags$name)
get_tags()$flat$name
get_post_ghost(55)$tags
get_post_ghost(55)
get_post_ghost(55)
library(RGhost)
get_post_ghost(55)
get_post_ghost(55)$tags
get_post_ghost(55)$tags$name
get_post_ghost(55)$tags
test <- get_post_ghost(55)$tags
test[1]
test[1]$name
test[[1]]$name
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
library(RGhost)
test <- get_post_ghost(55)$tags
test
test$name
library(RGhost)
library(RGhost)
test <- get_post_ghost(55)$tags
library(RGhost)
test <- get_post_ghost(55)
test
test$title
test$tags
test$tags$name
test$tags[[1]]
test$tags[[1]]$name
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
get_post_ghost(56)
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
get_users()
users <- get_users()
get_user_list <- get_users()
userlist_list <- setNames(as.list(get_user_list$id), get_user_list$name)
userlist_list
get_user_list <- get_users()
get_user_list
get_user_list$users
get_user_list$users$id
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
get_tags()
get_tags()$hier
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
get_tags()$hier$tags
get_tags()$hier$tags$id
get_tags()$hier$tags
list.filter(get_tag_list$hier$tags, id %in% Tags )
list.filter(get_tag_list$hier$tags, id %in% Tags)
test <- get_tags()$hier$tags
test
list.filter(test$hier$tags, id %in% c(10))
list.filter(test$hier$tags, id %in% c(10,11))
list.filter(test$hier$tags, id %in% c(10,11,12))
list.filter(test$hier$tags, id %in% c(10,11,12))
test
test$id
test[[1]]
list.filter(test$flat$tags, id %in% c(10,11,12))
test <- get_tags()
list.filter(test$flat$tags, id %in% c(10,11,12))
list.filter(test$flat$tags, id %in% list(10,11,12))
list.filter(test$flat, id %in% list(10,11,12))
list.filter(test$flat, id %in% list(10,11,12))
test
list.filter(test, id %in% list(10,11,12))
list.filter(test, id %in% c(10,11,12))
list.filter(test, id %in% (10,11))
library(RGhost)
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
test.env <- new.env()
assign('var', 100, envir=test.env)
# or simply
test.env$var <- 100
get('var') # var cannot be found since it is not defined in this environment
get('var', envir=test.env) # now it can be
library(RGhost)
set_credentials(1,2,3,4)
set_credentials(1,2,3)
library(RGhost)
set_credentials(1,2,3)
library(RGhost)
set_credentials(1,2,3)
set_credentials(1,300,3)
get('return_credentials', envir=ghost.env)
ghost.env <- new.env()
get('return_credentials', envir=ghost.env)
get('return_credentials', envir=ghost.env)
set_credentials(1,300,3)
library(RGhost)
set_credentials(1,300,3)
library(RGhost)
set_credentials(1,300,3)
library(RGhost)
set_credentials(1,300,3)
library(RGhost)
set_credentials(1,300,3)
construct_url(1,2,3)
ls()
ls(ghost)
library(RGhost)
set_credentials(1,300,3)
library(RGhost)
set_credentials("Bob",300,3)
library(RGhost)
test <- set_credentials("Bob",300,3)
test
test$username
construct_url(1,2,3)
library(RGhost)
test <- set_credentials("Bob",300,3)
construct_url(1,2,3)
library(RGhost)
test <- set_credentials("Bob",300,3)
construct_url(1,2,3)
library(RGhost)
test <- set_credentials("Bob",300,3)
construct_url(1,2,3)
library(RGhost)
test <- set_credentials("Bob",300,3)
construct_url(1,2,3)
library(RGhost)
test <- set_credentials("Bob",300,3)
construct_url(1,2,3)
set_credentials("bob@good-marketing.org","GoodMarketing14","http://good-marketing.org")
ghost$url
ghost$return_credentials$url
library(RGhost)
set_credentials("bob@good-marketing.org","GoodMarketing14","http://good-marketing.org")
library(RGhost)
set_credentials("bob@good-marketing.org","GoodMarketing14","http://good-marketing.org")
library(RGhost)
set_credentials("bob@good-marketing.org","GoodMarketing14","http://good-marketing.org")
difftime(ghost$return_credentials$time, Sys.time(), tz,units =  "secs")
difftime(ghost$return_credentials$time, Sys.time(),units =  "secs")
difftime(ghost$return_credentials$time, Sys.time(),units =  "secs")
test <- difftime(ghost$return_credentials$time, Sys.time(), tz,units =  "secs")
test
as.numeric(test)
difftime(Sys.time()- host$return_credentials$time,,units =  "secs")
difftime(Sys.time()- ghost$return_credentials$time,units =  "secs")
difftime(Sys.time() - ghost$return_credentials$time,units =  "secs")
test <- difftime(Sys.time(),ghost$return_credentials$time, tz,units =  "secs")
as.numeric(test)
library(RGhost)
set_credentials("bob@good-marketing.org","GoodMarketing14","http://good-marketing.org")
get_ghost_token()
library(RGhost)
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
editR::editR('template.Rmd')
shiny::runApp('~/Documents/RPROJECTS/GhostR/inst/app')
library(RGhost)
expiration <- as.numeric(difftime(Sys.time(),ghost$return_credentials$time,units =  "secs"))
shiny::runApp()
get_tags()
library(RGhost)
shiny::runApp()
shiny::runApp()
shiny::runApp()
get_tags$flat
get_tags()$flat
get_tags()$flat$tags
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
get_post_ghost(60)
get_post_ghost(60)
get_post_ghost(60)
library(RGhost)
get_post_ghost(60)
set_credentials("bob@good-marketing.org",
"GoodMarketing14",
"http://good-marketing.org")
get_post_ghost(60)
library(RGhost)
set_credentials("bob@good-marketing.org",
"GoodMarketing14",
"http://good-marketing.org")
get_post_ghost(60)
shiny::runApp()
devtools::install_github("trestletech/shinyStore")
